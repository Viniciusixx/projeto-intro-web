// 1. Para o item que voc√™ decidiu, pense nas caracter√≠sticas que s√£o importantes para constru√≠-lo. Vamos usar estas caracter√≠sticas para definir exemplos destes objetos usando o c√≥digo.

// 2. Agora, crie tr√™s conjuntos de vari√°veis utilizando as caracter√≠sticas que voc√™ definiu acima. Lembre-se que deve ser o mesmo tipo de item, com tr√™s conjuntos de dados diferentes.

// 5. Crie pelo menos mais uma caracter√≠stica para o item que voc√™ criou. Esta caracter√≠stica deve ser um array. Mantenha o tipo de dado do array criado sempre o mesmo, isto √©, se √© um array de strings, s√≥ deve receber strings. (Estou usando uma string',' pesoMinMax... )

// 6. Exiba um relat√≥rio utilizando console.log(), mostrando todos os dados de cada um dos itens criados at√© aqui
//  6.1. O log deve exibir o dado de nome, t√≠tulo ou afim sempre em LETRAS MAI√öSCULAS, (Estou usando o comando ".toUpperCase()")


//'Husky siberiano'
const nHuskySiberiano = 'Husky siberiano'
const origemHus = 'R√∫ssia'
const alturaCmAteHus = 60
const vidaAteHus = 15
const booleanHus = alturaCmAteHus === 60
const pesoMinMaxHus = [15,27]
console.log(`*${nHuskySiberiano.toUpperCase()};\n-Venho da ${origemHus};\n-Consigo chegar at√© ${alturaCmAteHus} cent√≠metros de altura; \n-Posso viver at√© ${vidaAteHus} anos; \n-Tenho 60 cm? \"${booleanHus}\"`,'\n','Meu peso M√≠n. e M√°x. s√£o:', pesoMinMaxHus)           //true
console.log('============================================')

//'Pastor alem√£o'
const nPastorAlemao = 'Pastor alem√£o'
const origemPas = 'Alemanha'
const alturaCmAtePas = 60
const vidaAtePas = 10
const booleanPas = alturaCmAtePas > 20
const pesoMinMaxPas = [22,40]
console.log(`*${nPastorAlemao.toUpperCase()};\n-Venho da ${origemPas};\n-Consigo chegar at√© ${alturaCmAtePas} cent√≠metros de altura; \n-Posso viver at√© ${vidaAtePas} anos; \n-Sou maior que 20 cm? \"${booleanPas}\"`,'\n','Meu peso M√≠n. e M√°x. s√£o:', pesoMinMaxPas)   //true
console.log('============================================')

//'Pit bull'
const nPitBull = 'Pit bull'
const origemPit = 'Estados Unidos'
const alturaCmAtePit = 60
const vidaAtePit = 14
const booleanPit = alturaCmAtePit < 80
const pesoMinMaxPit = [10,35]
console.log(`*${nPitBull.toUpperCase()};\n-Venho da ${origemPit};\n-Consigo chegar at√© ${alturaCmAtePit} cent√≠metros de altura; \n-Posso viver at√© ${vidaAtePit} anos; \n-Sou menor que 80 cm? \"${booleanPit}\";`,'\n','Meu peso M√≠n. e M√°x. s√£o:', pesoMinMaxPit) //True
console.log('============================================')


// 3. Fa√ßa um c√°lculo de m√©dia, entre os valores num√©ricos respectivos de cada item. Imprima o valor da m√©dia utilizando um console.log. Guarde este valor em uma const;
// üí°A m√©dia deve ser igual √† soma dos itens, dividida pelo total de itens.

const mediaIdadeMaxCaes = (vidaAteHus + vidaAtePas + vidaAtePit) /3
console.log(`*Essa √© a m√©dia de expectativa m√°xima de vida dos 6 cachulos:\n-${mediaIdadeMaxCaes}`)
const mediaAlturaCaes = (alturaCmAteHus + alturaCmAtePas + alturaCmAtePit) /3
console.log(`*Essa √© a m√©dia altura m√°xima dos 6 cachulos:\n-${mediaAlturaCaes}`)


console.log('============================================')

// 4. Com um console.log, imprima o resultado de uma opera√ß√£o l√≥gica que checa se todos os valores de vari√°veis booleanas criadas at√© aqui s√£o verdadeiras.

const verificaBooleanAllDogs =booleanHus && booleanPas && booleanPit
console.log (`*Todas as booleanDogs s√£o verdadeiras?\n-${verificaBooleanAllDogs}`)



















